// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Orders.Infrastructure;

namespace Orders.Api.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    [Migration("20210219194925_Added_address_fields")]
    partial class Added_address_fields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Orders.Domain.AggregateModel.OrderAggregate.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updated_by");

                    b.Property<decimal>("ValueNet")
                        .HasColumnType("numeric")
                        .HasColumnName("value_net");

                    b.Property<decimal>("ValueTax")
                        .HasColumnType("numeric")
                        .HasColumnName("value_tax");

                    b.HasKey("Id")
                        .HasName("pk_orders_order_id");

                    b.HasIndex("Id")
                        .HasDatabaseName("idx_orders_orders_id");

                    b.ToTable("orders", "orders");
                });

            modelBuilder.Entity("Orders.Domain.AggregateModel.OrderAggregate.OrderedProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.HasKey("Id")
                        .HasName("pk_orders_ordered_product_id");

                    b.HasIndex("Id")
                        .HasDatabaseName("idx_orders_ordered_products_id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("idx_orders_ordered_products_product_id");

                    b.ToTable("ordered_products", "orders");
                });

            modelBuilder.Entity("Orders.Domain.AggregateModel.OrderAggregate.OrderedProduct", b =>
                {
                    b.HasOne("Orders.Domain.AggregateModel.OrderAggregate.Order", null)
                        .WithMany("OrderedProducts")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Orders.Domain.AggregateModel.OrderAggregate.Order", b =>
                {
                    b.Navigation("OrderedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
