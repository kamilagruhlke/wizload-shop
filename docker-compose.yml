version: '3.4'

services:
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  adminer:
    image: adminer

  redis:
    image: 'bitnami/redis'

  identityapi:
    image: ${DOCKER_REGISTRY-}identityapi
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.Api/Dockerfile

  gatewayapi:
    image: ${DOCKER_REGISTRY-}gatewayapi
    build:
      context: .
      dockerfile: src/Services/Gateway/Gateway.Api/Dockerfile
    depends_on:
      - basketapi
      - categoriesapi
      - productsapi
      - notificationsapi

  basketapi:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: src/Services/Basket/Basket.Api/Dockerfile
    depends_on:
      - identityapi
      - redis

  categoriesapi:
    image: ${DOCKER_REGISTRY-}categoriesapi
    build:
      context: .
      dockerfile: src/Services/Categories/Categories.Api/Dockerfile
    depends_on:
      - postgres

  notificationsapi:
    image: ${DOCKER_REGISTRY-}notificationsapi
    build:
      context: .
      dockerfile: src/Services/Notifications/Notifications.Api/Dockerfile

  productsapi:
    image: ${DOCKER_REGISTRY-}productsapi
    build:
      context: .
      dockerfile: src/Services/Products/Products.Api/Dockerfile
    depends_on:
      - postgres

  imagesapi:
    image: ${DOCKER_REGISTRY-}imagesapi
    build:
      context: .
      dockerfile: src/Services/Images/Images.Api/Dockerfile

  shopmvc:
    image: ${DOCKER_REGISTRY-}shopmvc
    build:
      context: .
      dockerfile: src/Mvc/Shop.Mvc/Dockerfile
    depends_on:
      - gatewayapi

volumes:
  postgres-data:
